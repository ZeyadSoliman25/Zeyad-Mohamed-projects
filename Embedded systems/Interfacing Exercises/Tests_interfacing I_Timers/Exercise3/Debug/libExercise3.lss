In archive libExercise3.a:

main.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         000003cc  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000006be  00000000  00000000  00000400  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .bss.tick     00000001  00000000  00000000  00000abe  2**0
                  ALLOC
  6 .text.Timer0_compare 00000040  00000000  00000000  00000abe  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text.main    0000001c  00000000  00000000  00000afe  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.ISR     00000044  00000000  00000000  00000b1a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE

Disassembly of section .text.Timer0_compare:

00000000 <Timer0_compare>:

#include <avr/io.h>

unsigned char tick = 0;

void Timer0_compare(void){
   0:	df 93       	push	r29
   2:	cf 93       	push	r28
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
	TCCR0 = (1<<FOC0) | (1<<WGM01) | (1<<CS00) | (1<<CS02);
   8:	e3 e5       	ldi	r30, 0x53	; 83
   a:	f0 e0       	ldi	r31, 0x00	; 0
   c:	8d e8       	ldi	r24, 0x8D	; 141
   e:	80 83       	st	Z, r24
	TCNT0 = 0;
  10:	e2 e5       	ldi	r30, 0x52	; 82
  12:	f0 e0       	ldi	r31, 0x00	; 0
  14:	10 82       	st	Z, r1
	OCR0 = 250;
  16:	ec e5       	ldi	r30, 0x5C	; 92
  18:	f0 e0       	ldi	r31, 0x00	; 0
  1a:	8a ef       	ldi	r24, 0xFA	; 250
  1c:	80 83       	st	Z, r24
	TIMSK |= (1<<OCIE0);
  1e:	a9 e5       	ldi	r26, 0x59	; 89
  20:	b0 e0       	ldi	r27, 0x00	; 0
  22:	e9 e5       	ldi	r30, 0x59	; 89
  24:	f0 e0       	ldi	r31, 0x00	; 0
  26:	80 81       	ld	r24, Z
  28:	82 60       	ori	r24, 0x02	; 2
  2a:	8c 93       	st	X, r24
	SREG |= (1<<7);
  2c:	af e5       	ldi	r26, 0x5F	; 95
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	ef e5       	ldi	r30, 0x5F	; 95
  32:	f0 e0       	ldi	r31, 0x00	; 0
  34:	80 81       	ld	r24, Z
  36:	80 68       	ori	r24, 0x80	; 128
  38:	8c 93       	st	X, r24
}
  3a:	cf 91       	pop	r28
  3c:	df 91       	pop	r29
  3e:	08 95       	ret

Disassembly of section .text.main:

00000000 <main>:

#include <avr/io.h>

unsigned char tick = 0;

void Timer0_compare(void){
   0:	df 93       	push	r29
   2:	cf 93       	push	r28
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
	TCCR0 = (1<<FOC0) | (1<<WGM01) | (1<<CS00) | (1<<CS02);
   8:	a4 e3       	ldi	r26, 0x34	; 52
   a:	b0 e0       	ldi	r27, 0x00	; 0
   c:	e4 e3       	ldi	r30, 0x34	; 52
   e:	f0 e0       	ldi	r31, 0x00	; 0
	TCNT0 = 0;
  10:	80 81       	ld	r24, Z
  12:	81 60       	ori	r24, 0x01	; 1
  14:	8c 93       	st	X, r24
	OCR0 = 250;
  16:	0e 94 00 00 	call	0	; 0x0 <main>
  1a:	00 c0       	rjmp	.+0      	; 0x1c <__zero_reg__+0x1b>

Disassembly of section .text.ISR:

00000000 <ISR>:

#include <avr/io.h>

unsigned char tick = 0;

void Timer0_compare(void){
   0:	df 93       	push	r29
   2:	cf 93       	push	r28
   4:	00 d0       	rcall	.+0      	; 0x6 <ISR+0x6>
   6:	00 d0       	rcall	.+0      	; 0x8 <ISR+0x8>
	TCCR0 = (1<<FOC0) | (1<<WGM01) | (1<<CS00) | (1<<CS02);
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	9a 83       	std	Y+2, r25	; 0x02
   e:	89 83       	std	Y+1, r24	; 0x01
	TCNT0 = 0;
  10:	80 91 00 00 	lds	r24, 0x0000
  14:	8f 5f       	subi	r24, 0xFF	; 255
	OCR0 = 250;
  16:	80 93 00 00 	sts	0x0000, r24
  1a:	80 91 00 00 	lds	r24, 0x0000
	TIMSK |= (1<<OCIE0);
  1e:	82 30       	cpi	r24, 0x02	; 2
  20:	01 f4       	brne	.+0      	; 0x22 <ISR+0x22>
  22:	a5 e3       	ldi	r26, 0x35	; 53
  24:	b0 e0       	ldi	r27, 0x00	; 0
  26:	e5 e3       	ldi	r30, 0x35	; 53
  28:	f0 e0       	ldi	r31, 0x00	; 0
  2a:	90 81       	ld	r25, Z
	SREG |= (1<<7);
  2c:	81 e0       	ldi	r24, 0x01	; 1
  2e:	89 27       	eor	r24, r25
  30:	8c 93       	st	X, r24
  32:	10 92 00 00 	sts	0x0000, r1
  36:	0f 90       	pop	r0
  38:	0f 90       	pop	r0
}
  3a:	0f 90       	pop	r0
  3c:	0f 90       	pop	r0
  3e:	cf 91       	pop	r28
  40:	df 91       	pop	r29
  42:	08 95       	ret
