
Exercise3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000176  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         0000039c  00000000  00000000  000001cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000067c  00000000  00000000  00000568  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 b9 00 	jmp	0x172	; 0x172 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
 */

#include <avr/io.h>
#include <util/delay.h>

int main(){
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	DDRC |= (1<<0);
  74:	a4 e3       	ldi	r26, 0x34	; 52
  76:	b0 e0       	ldi	r27, 0x00	; 0
  78:	e4 e3       	ldi	r30, 0x34	; 52
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	80 81       	ld	r24, Z
  7e:	81 60       	ori	r24, 0x01	; 1
  80:	8c 93       	st	X, r24
	DDRC |= (1<<1);
  82:	a4 e3       	ldi	r26, 0x34	; 52
  84:	b0 e0       	ldi	r27, 0x00	; 0
  86:	e4 e3       	ldi	r30, 0x34	; 52
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	80 81       	ld	r24, Z
  8c:	82 60       	ori	r24, 0x02	; 2
  8e:	8c 93       	st	X, r24
	DDRB &= ~ (1<<0);
  90:	a7 e3       	ldi	r26, 0x37	; 55
  92:	b0 e0       	ldi	r27, 0x00	; 0
  94:	e7 e3       	ldi	r30, 0x37	; 55
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	80 81       	ld	r24, Z
  9a:	8e 7f       	andi	r24, 0xFE	; 254
  9c:	8c 93       	st	X, r24
	DDRB &= ~ (1<<1);
  9e:	a7 e3       	ldi	r26, 0x37	; 55
  a0:	b0 e0       	ldi	r27, 0x00	; 0
  a2:	e7 e3       	ldi	r30, 0x37	; 55
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	80 81       	ld	r24, Z
  a8:	8d 7f       	andi	r24, 0xFD	; 253
  aa:	8c 93       	st	X, r24
	PORTC |= (1<<0);
  ac:	a5 e3       	ldi	r26, 0x35	; 53
  ae:	b0 e0       	ldi	r27, 0x00	; 0
  b0:	e5 e3       	ldi	r30, 0x35	; 53
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	81 60       	ori	r24, 0x01	; 1
  b8:	8c 93       	st	X, r24
	PORTC |= (1<<1);
  ba:	a5 e3       	ldi	r26, 0x35	; 53
  bc:	b0 e0       	ldi	r27, 0x00	; 0
  be:	e5 e3       	ldi	r30, 0x35	; 53
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	82 60       	ori	r24, 0x02	; 2
  c6:	8c 93       	st	X, r24
	while (1){
		if ((PINB & (1<<0)) && (PINB &(1<<1))){
  c8:	e6 e3       	ldi	r30, 0x36	; 54
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	88 2f       	mov	r24, r24
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	81 70       	andi	r24, 0x01	; 1
  d4:	90 70       	andi	r25, 0x00	; 0
  d6:	98 2f       	mov	r25, r24
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	89 27       	eor	r24, r25
  dc:	88 23       	and	r24, r24
  de:	c1 f4       	brne	.+48     	; 0x110 <main+0xa4>
  e0:	e6 e3       	ldi	r30, 0x36	; 54
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	88 2f       	mov	r24, r24
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	82 70       	andi	r24, 0x02	; 2
  ec:	90 70       	andi	r25, 0x00	; 0
  ee:	00 97       	sbiw	r24, 0x00	; 0
  f0:	79 f0       	breq	.+30     	; 0x110 <main+0xa4>
			PORTC &= ~(1<<0);
  f2:	a5 e3       	ldi	r26, 0x35	; 53
  f4:	b0 e0       	ldi	r27, 0x00	; 0
  f6:	e5 e3       	ldi	r30, 0x35	; 53
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	8e 7f       	andi	r24, 0xFE	; 254
  fe:	8c 93       	st	X, r24
			PORTC &= ~(1<<1);
 100:	a5 e3       	ldi	r26, 0x35	; 53
 102:	b0 e0       	ldi	r27, 0x00	; 0
 104:	e5 e3       	ldi	r30, 0x35	; 53
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	80 81       	ld	r24, Z
 10a:	8d 7f       	andi	r24, 0xFD	; 253
 10c:	8c 93       	st	X, r24
 10e:	dc cf       	rjmp	.-72     	; 0xc8 <main+0x5c>
		}
		else if (PINB & (1<<0)){
 110:	e6 e3       	ldi	r30, 0x36	; 54
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	80 81       	ld	r24, Z
 116:	88 2f       	mov	r24, r24
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	81 70       	andi	r24, 0x01	; 1
 11c:	90 70       	andi	r25, 0x00	; 0
 11e:	88 23       	and	r24, r24
 120:	41 f0       	breq	.+16     	; 0x132 <main+0xc6>
			PORTC &= ~(1<<0);
 122:	a5 e3       	ldi	r26, 0x35	; 53
 124:	b0 e0       	ldi	r27, 0x00	; 0
 126:	e5 e3       	ldi	r30, 0x35	; 53
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	8e 7f       	andi	r24, 0xFE	; 254
 12e:	8c 93       	st	X, r24
 130:	cb cf       	rjmp	.-106    	; 0xc8 <main+0x5c>
		}
		else if (PINB & (1<<1)){
 132:	e6 e3       	ldi	r30, 0x36	; 54
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	80 81       	ld	r24, Z
 138:	88 2f       	mov	r24, r24
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	82 70       	andi	r24, 0x02	; 2
 13e:	90 70       	andi	r25, 0x00	; 0
 140:	00 97       	sbiw	r24, 0x00	; 0
 142:	41 f0       	breq	.+16     	; 0x154 <main+0xe8>
			PORTC &= ~(1<<1);
 144:	a5 e3       	ldi	r26, 0x35	; 53
 146:	b0 e0       	ldi	r27, 0x00	; 0
 148:	e5 e3       	ldi	r30, 0x35	; 53
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	80 81       	ld	r24, Z
 14e:	8d 7f       	andi	r24, 0xFD	; 253
 150:	8c 93       	st	X, r24
 152:	ba cf       	rjmp	.-140    	; 0xc8 <main+0x5c>
		}
		else {
			PORTC |= (1<<0);
 154:	a5 e3       	ldi	r26, 0x35	; 53
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	e5 e3       	ldi	r30, 0x35	; 53
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	81 60       	ori	r24, 0x01	; 1
 160:	8c 93       	st	X, r24
			PORTC |= (1<<1);
 162:	a5 e3       	ldi	r26, 0x35	; 53
 164:	b0 e0       	ldi	r27, 0x00	; 0
 166:	e5 e3       	ldi	r30, 0x35	; 53
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	80 81       	ld	r24, Z
 16c:	82 60       	ori	r24, 0x02	; 2
 16e:	8c 93       	st	X, r24
 170:	ab cf       	rjmp	.-170    	; 0xc8 <main+0x5c>

00000172 <_exit>:
 172:	f8 94       	cli

00000174 <__stop_program>:
 174:	ff cf       	rjmp	.-2      	; 0x174 <__stop_program>
