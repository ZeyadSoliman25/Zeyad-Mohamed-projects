#include "ultrasonic.h"
#include "icu.h"
#include "std_types.h"
#include "gpio.h"
#include <util/delay.h>

static	uint8 g_edgeCount = 0;
static	uint16 g_timeHigh = 0;
static	uint16 g_timePeriod = 0;
static	uint16 g_timePeriodPlusHigh = 0;
static ICU_ConfigType configurations = {F_CPU_8, RAISING};


void Ultrasonic_init(void){
	ICU_init(&configurations);
	ICU_setCallBack(Ultrasonic_edgeProcessing);
	GPIO_setupPinDirection(PORTB_ID, PIN5_ID, PIN_OUTPUT);
}

void Ultrasonic_Trigger(void){
	GPIO_writePin(PORTB_ID, PIN5_ID, LOGIC_HIGH);
	_delay_us(5);
	GPIO_writePin(PORTB_ID, PIN5_ID, LOGIC_LOW);
	_delay_us(10);
}

uint16 Ultrasonic_readDistance(void){
	uint16 distance = 0; /* to not allow the value in distance variable be popped from the stack */

	uint16 period = 0;

	/* to only send a trigger pulse when the echo is received */
	if (g_edgeCount == 0){
		Ultrasonic_Trigger();
	}

	_delay_ms(1);

	if(g_edgeCount == 4)
	{
		ICU_deInit();
		g_edgeCount = 0;
		period = g_timePeriodPlusHigh - g_timeHigh;
		distance =  period /58.8 ;
		ICU_init(&configurations);
	}
	return distance;
}


void Ultrasonic_edgeProcessing(void){
	g_edgeCount++;

	if(g_edgeCount == 1)
	{
		ICU_clearTimerValue();
		ICU_setEdgeDetectionType(FALLING);
	}
	else if(g_edgeCount == 2)
	{
		g_timeHigh = ICU_getInputCaptureValue();
		ICU_setEdgeDetectionType(RAISING);
	}
	else if(g_edgeCount == 3)
	{
		g_timePeriod = ICU_getInputCaptureValue();
		ICU_setEdgeDetectionType(FALLING);
	}
	else if(g_edgeCount == 4)
	{
		g_timePeriodPlusHigh = ICU_getInputCaptureValue();
		ICU_clearTimerValue();
		ICU_setEdgeDetectionType(RAISING);
	}

}
