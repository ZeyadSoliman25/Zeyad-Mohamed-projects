/*
 * timer.h
 *
 *  Created on: Oct 23, 2023
 *  Author: Zeyad Mohamed
 */

#ifndef TIMER_H_
#define TIMER_H_

#include "std_types.h"

typedef enum {
	NO_CLOCK, FCPU_1, FCPU_8, FCPU_64, FCPU_256, FCPU_1024, EXTERNAL_CLOCK_SOURCE_FALLING, EXTERNAL_CLOCK_SOURCE_RISING
}Timer1_Prescaler;


typedef enum {
	NORMAL, PWM_8bit, PWM_9bit, PWM_10bit, CTC, FAST_PWM_8bit, FAST_PWM_9bit, FAST_PWM_10bit, PWM_PHASE_FREQUENCY_CORRECT_ICR1, PWM_PHASE_FREQUENCY_CORRECT_OCR1A, PWM_PHASE_CORRECT_ICR1, PWM_PHASE_CORRECT_OCR1A, CTC_ICR1, RESERVED_TIMER, FAST_PWM_ICR1, FAST_PWM_OCR1A
}Timer1_Mode;


typedef struct {
	uint16 initial_value;
	uint16 compare_value;
	Timer1_Prescaler prescaler;
	Timer1_Mode mode;
}Timer1_ConfigType;


void Timer1_init(const Timer1_ConfigType * Config_Ptr);

void Timer1_deInit(void);

void Timer1_setCallBack(void(*a_ptr)(void));


#endif /* TIMER_H_ */
